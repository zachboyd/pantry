/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type HouseholdRole = 'ai' | 'manager' | 'member';

export type Int8 = ColumnType<
  string,
  bigint | number | string,
  bigint | number | string
>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type MessageType =
  | 'ai'
  | 'location'
  | 'system'
  | 'task_created'
  | 'text';

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AuthAccount {
  accessToken: string | null;
  accessTokenExpiresAt: Timestamp | null;
  accountId: string;
  createdAt: Generated<Timestamp>;
  id: string;
  idToken: string | null;
  password: string | null;
  providerId: string;
  refreshToken: string | null;
  refreshTokenExpiresAt: Timestamp | null;
  scope: string | null;
  updatedAt: Generated<Timestamp>;
  userId: string;
}

export interface AuthSession {
  createdAt: Generated<Timestamp>;
  expiresAt: Timestamp;
  id: string;
  ipAddress: string | null;
  token: string;
  updatedAt: Generated<Timestamp>;
  userAgent: string | null;
  userId: string;
}

export interface AuthUser {
  createdAt: Generated<Timestamp>;
  email: string;
  emailVerified: Generated<boolean>;
  id: string;
  image: string | null;
  name: string;
  updatedAt: Generated<Timestamp>;
}

export interface AuthVerification {
  createdAt: Generated<Timestamp | null>;
  expiresAt: Timestamp;
  id: string;
  identifier: string;
  updatedAt: Generated<Timestamp | null>;
  value: string;
}

export interface CronJob {
  active: Generated<boolean>;
  command: string;
  database: Generated<string>;
  jobid: Generated<Int8>;
  jobname: string | null;
  nodename: Generated<string>;
  nodeport: Generated<number>;
  schedule: string;
  username: Generated<string>;
}

export interface CronJobRunDetails {
  command: string | null;
  database: string | null;
  end_time: Timestamp | null;
  job_pid: number | null;
  jobid: Int8 | null;
  return_message: string | null;
  runid: Generated<Int8>;
  start_time: Timestamp | null;
  status: string | null;
  username: string | null;
}

export interface Household {
  created_at: Generated<Timestamp>;
  created_by: string;
  description: string | null;
  id: string;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface HouseholdMember {
  household_id: string;
  id: string;
  joined_at: Generated<Timestamp>;
  role: Generated<HouseholdRole>;
  user_id: string;
}

export interface Message {
  content: string;
  created_at: Generated<Timestamp>;
  household_id: string;
  id: string;
  message_type: MessageType;
  metadata: Json | null;
  updated_at: Generated<Timestamp>;
  user_id: string | null;
}

export interface MessageRead {
  id: string;
  message_id: string;
  read_at: Generated<Timestamp>;
  user_id: string;
}

export interface Pantry {
  created_at: Generated<Timestamp>;
  description: string | null;
  household_id: string;
  id: string;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface TypingIndicator {
  created_at: Generated<Timestamp>;
  expires_at: Generated<Timestamp>;
  household_id: string;
  id: string;
  is_typing: Generated<boolean>;
  last_typing_at: Generated<Timestamp>;
  user_id: string;
}

export interface User {
  auth_user_id: string | null;
  avatar_url: string | null;
  birth_date: Timestamp | null;
  created_at: Generated<Timestamp>;
  display_name: string | null;
  email: string | null;
  first_name: string;
  id: string;
  is_ai: Generated<boolean>;
  last_name: string;
  managed_by: string | null;
  permissions: Json | null;
  phone: string | null;
  preferences: Json | null;
  primary_household_id: string | null;
  relationship_to_manager: string | null;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  auth_account: AuthAccount;
  auth_session: AuthSession;
  auth_user: AuthUser;
  auth_verification: AuthVerification;
  'cron.job': CronJob;
  'cron.job_run_details': CronJobRunDetails;
  household: Household;
  household_member: HouseholdMember;
  message: Message;
  message_read: MessageRead;
  pantry: Pantry;
  typing_indicator: TypingIndicator;
  user: User;
}
