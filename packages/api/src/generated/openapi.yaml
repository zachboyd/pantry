openapi: 3.0.0
paths:
  /health:
    get:
      operationId: HealthController_getHealth
      parameters: []
      responses:
        '200':
          description: API health information
      summary: Get API health status
      tags:
        - health
  /api/attachments/upload-url:
    post:
      operationId: AttachmentController_createUploadUrl
      parameters: []
      responses:
        '200':
          description: Presigned upload URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  upload_url:
                    type: string
                  s3_key:
                    type: string
                  expires_at:
                    type: number
        '401':
          description: Unauthorized - User not found
        '403':
          description: Forbidden - Access denied to household
      security:
        - session: []
      summary: Generate presigned URL for attachment upload
      tags: &ref_0
        - attachments
  /api/attachments/{id}/uploaded:
    post:
      operationId: AttachmentController_confirmUpload
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Upload confirmed successfully
        '401':
          description: Unauthorized - User not found
        '403':
          description: Forbidden - Access denied to household
        '404':
          description: Not Found - Attachment not found
      security:
        - session: []
      summary: Confirm successful attachment upload
      tags: *ref_0
  /api/attachments/{id}/download-url:
    get:
      operationId: AttachmentController_createDownloadUrl
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Presigned download URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  download_url:
                    type: string
                  expires_at:
                    type: number
        '401':
          description: Unauthorized - User not found
        '403':
          description: Forbidden - Access denied to household
        '404':
          description: Not Found - Attachment not found
      security:
        - session: []
      summary: Generate presigned URL for attachment download
      tags: *ref_0
  /api/attachments/{id}:
    delete:
      operationId: AttachmentController_deleteAttachment
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Attachment deleted successfully
        '401':
          description: Unauthorized - User not found
        '403':
          description: Forbidden - Access denied to household
        '404':
          description: Not Found - Attachment not found
      security:
        - session: []
      summary: Delete attachment and associated file
      tags: *ref_0
  /api/powersync/auth:
    post:
      operationId: PowerSyncController_authenticateForPowerSync
      parameters: []
      responses:
        '200':
          description: PowerSync authentication token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expires_at:
                    type: number
        '401':
          description: Unauthorized - User not found
      security:
        - session: []
      summary: Authenticate user for PowerSync
      tags: &ref_1
        - powersync
  /api/powersync/jwks:
    get:
      operationId: PowerSyncController_getJwks
      parameters: []
      responses:
        '200':
          description: JWKS endpoint for PowerSync token verification
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: object
      summary: Get JSON Web Key Set for PowerSync
      tags: *ref_1
  /api/powersync/write:
    post:
      operationId: PowerSyncController_processWriteOperations
      parameters: []
      responses:
        '200':
          description: Write operations processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        operation_id:
                          type: number
                        message:
                          type: string
                        code:
                          type: string
        '400':
          description: Bad Request - Invalid operations array
        '401':
          description: Unauthorized - User not found
      security:
        - session: []
      summary: Process PowerSync write operations
      tags: *ref_1
  /api/auth/sign-in/email:
    post:
      tags:
        - auth
      summary: Sign in with email and password
      description: Authenticate user with email and password credentials
      operationId: signInEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User email address
                password:
                  type: string
                  minLength: 6
                  description: User password
      responses:
        '200':
          description: Successfully authenticated
          headers:
            Set-Cookie:
              description: Session cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      emailVerified:
                        type: boolean
                      image:
                        type: string
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                  session:
                    type: object
                    properties:
                      id:
                        type: string
                      userId:
                        type: string
                      expiresAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid credentials or request format
        '401':
          description: Authentication failed
  /api/auth/sign-up/email:
    post:
      tags:
        - auth
      summary: Sign up with email and password
      description: Create a new user account with email and password
      operationId: signUpEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                  description: User email address
                password:
                  type: string
                  minLength: 6
                  description: User password
                name:
                  type: string
                  minLength: 1
                  description: User full name
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      emailVerified:
                        type: boolean
                      createdAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid request format or user already exists
  /api/auth/session:
    get:
      tags:
        - auth
      summary: Get current session
      description: Retrieve current user session information
      operationId: getSession
      security:
        - session: []
      responses:
        '200':
          description: Current session information
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      name:
                        type: string
                      emailVerified:
                        type: boolean
                      image:
                        type: string
                        nullable: true
                  session:
                    type: object
                    properties:
                      id:
                        type: string
                      userId:
                        type: string
                      expiresAt:
                        type: string
                        format: date-time
        '401':
          description: No active session
  /api/auth/sign-out:
    post:
      tags:
        - auth
      summary: Sign out
      description: End current user session
      operationId: signOut
      security:
        - session: []
      responses:
        '200':
          description: Successfully signed out
          headers:
            Set-Cookie:
              description: Clear session cookie
              schema:
                type: string
  /api/auth/forgot-password:
    post:
      tags:
        - auth
      summary: Request password reset
      description: Send password reset email to user
      operationId: forgotPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: User email address
      responses:
        '200':
          description: Password reset email sent (if email exists)
        '400':
          description: Invalid email format
  /api/auth/reset-password:
    post:
      tags:
        - auth
      summary: Reset password
      description: Reset user password with reset token
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  type: string
                  description: Password reset token from email
                password:
                  type: string
                  minLength: 6
                  description: New password
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: Invalid or expired token
info:
  title: Pantry API
  description: API for collaborative pantry planning
  version: 1.0.0
  contact: {}
tags:
  - name: health
    description: API health and status monitoring
  - name: powersync
    description: Real-time data synchronization
  - name: auth
    description: Authentication and user management
servers:
  - url: http://localhost:3001
    description: Local development server
components:
  securitySchemes:
    cookie:
      type: apiKey
      in: cookie
      name: pantry.session_token
      description: Session cookie from Better Auth
    powersync-jwt:
      scheme: bearer
      bearerFormat: JWT
      type: http
      description: PowerSync JWT token for data synchronization
  schemas: {}
